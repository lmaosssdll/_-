import os
from yumlib import yummy
from telethon.tl.functions.channels import JoinChannelRequest
from .. import loader

class yg_circle(loader.Module):
    """–ú–æ–¥—É–ª—å –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤–∏–¥–µ–æ –≤ –∫—Ä—É–∂–æ—á–µ–∫"""

    strings = {"name": "yg_circle"}

    async def client_ready(self, client, db):
        # –ê–≤—Ç–æ–ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª @moduleslist
        await client(JoinChannelRequest("@moduleslist"))
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è yumlib
        await yummy(client)

    async def krcmd(self, message):
        """<reply to video> –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–∏–¥–µ–æ –≤ –∫—Ä—É–∂–æ—á–µ–∫"""
        reply = await message.get_reply_message()
        if not reply or not reply.video:
            await message.edit("<b><emoji document_id=5210952531676504517>‚ùå</emoji> –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –≤–∏–¥–µ–æ –∫–æ–º–∞–Ω–¥–æ–π <code>.kr</code> –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤ –∫—Ä—É–∂–æ—á–µ–∫ üé•</b>")
            return
        try:
            await message.edit("<b><emoji document_id=4988080790286894217>ü´•</emoji> –û–±—Ä–∞–±–æ—Ç–∫–∞...</b>")
            video = await reply.download_media()
            square_video = await self.crop_to_square(video)
            if square_video:
                await message.edit("<b><emoji document_id=4988080790286894217>ü´•</emoji> –û—Ç–ø—Ä–∞–≤–∫–∞...</b>")
                await message.client.send_file(message.to_id, square_video, video_note=True)
        except Exception as e:
            await message.edit(f"<b><emoji document_id=5210952531676504517>‚ùå</emoji> –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤–∏–¥–µ–æ –≤ –∫—Ä—É–∂–æ—á–µ–∫: {str(e)}</b>")
        finally:
            if os.path.exists(video):
                os.remove(video)
            if square_video and os.path.exists(square_video):
                os.remove(square_video)
        await message.delete()

    async def crop_to_square(self, video):
        """–û–±—Ä–µ–∑–∞—Ç—å –≤–∏–¥–µ–æ –¥–æ –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞ (1:1) —Å –ø–æ–º–æ—â—å—é ffmpeg"""
        square_video = f"{video}_square.mp4"
        command = (
            f"ffmpeg -i {video} -vf \"crop='min(in_w,in_h)':'min(in_w,in_h)':'(in_w-out_w)/2':'(in_h-out_h)/2'\" -c:a copy {square_video}"
        )
        os.system(command)
        return square_video if os.path.exists(square_video) else None
